#!/usr/bin/env bash
# cat * $PWD + optional headers between files:
# excludes hidden files and directories (*.), 'uv.lock'
# and files listed in .gitignore or .*ignore
# Use -H or --headers to show file headers and footers

show_headers=false

# Process command line arguments
while [[ $# -gt 0 ]]; do
    case "$1" in
    -H | --headers)
        show_headers=true
        shift
        ;;
    *)
        shift
        ;;
    esac
done

excluded_names="'.*'"
excluded_paths='./.*'
excluded_files='uv.lock'
ignore_patterns=$(find . -name ".gitignore" -o -name ".*ignore" -print0 2>/dev/null | xargs -0 cat 2>/dev/null | tr '\n' '|' | sed 's/|$//')

process_file() {
    local file="$1"

    if $show_headers; then
        echo "# File: $file"
        echo "#######"
        echo ""
    fi

    cat "$file"

    if $show_headers; then
        echo ""
        echo "# EOF: $file"
        echo ""
    fi
}

if [ -n "$ignore_patterns" ]; then
    find . -type f \
        -not -path "$excluded_paths" \
        -not -name "$excluded_names" \
        -not -name "$excluded_files" \
        -print0 |
        while IFS= read -r -d $'\0' file; do
            if ! echo "$file" | grep -E -q "$ignore_patterns"; then
                # If the file is NOT ignored
                process_file "$file"
            fi
        done
else
    # If no .gitignore or .*ignore files
    find . -type f \
        -not -name "$excluded_names" \
        -not -path "$excluded_paths" \
        -not -name "$excluded_files" \
        -print0 | while IFS= read -r -d $'\0' file; do
        process_file "$file"
    done
fi
